#Overide the fvwm default /usr/share/fvwm/default-config/config
#Functionality:
#  +Aim to provide mouseless use.
#  +Warp to all new windows.
#  +Center the cursor in the middle of the window(allow resize in all directions by keys.)
#  +Pager toggle display
#  +Icon windowlist.
#  +Maximum screen usage.

############## Customizations ################################################

SetEnv fvwm_home $[HOME]/.fvwm
SetEnv fvwm_icon $[fvwm_home]/icons
InfoStoreAdd log $[XDG_RUNTIME_DIR]/fvwm$[USER].log

SetEnv fvwm_image_path $[fvwm_icon]:$[fvwm_icon];.png:$[fvwm_home]/images:$[FVWM_DATADIR]/default-config/images/icons:/usr/share/pixmaps/fvwm:+
ImagePath $[fvwm_image_path]
PipeRead 'echo SetEnv LIBRARY_HOME ${LIBRARY_HOME:=/opt/library}'
CursorStyle Default $[fvwm_icon]/cursor/crosshair.xcursor
CursorStyle Root $[fvwm_icon]/cursor/crosshair.xcursor

Read $[fvwm_home]/init.fvwm
Test (F $[fvwm_home]/gameMenu.fvwm) Read $[fvwm_home]/gameMenu.fvwm
Test (!F $[fvwm_home]/gameMenu.fvwm) Test (F $[fvwm_home]/funstuffPiMenu.fvwm) Read $[fvwm_home]/funstuffPiMenu.fvwm
Read $[fvwm_home]/progMenu.fvwm
Test (F $[fvwm_home]/layout.fvwm) Read $[fvwm_home]/layout.fvwm

Style * Icon
Style * IconBox screen w 15 15 -165 -15, IconGrid 3 3, IconFill right top

Style xvkbd WindowListSkip, CirculateSkip, StaysOnTop, !Borders, !Title
Style StatusPanel WindowListSkip, CirculateSkip, !Borders, !Title, NoIcon, Sticky
Style FvwmButtons ParentalRelativity
Style com-mycompany-mousey-App  Sticky, StaysOnTop, WindowListSkip, !Borders,!Title,HandleWidth 0
Style Quake3-UrT !Borders, !Title, HandleWidth 0
Style "Team Fortress 2*" !Borders, !Title, HandleWidth 0
Style "*" BorderWidth 1, HandleWidth 1
Style "*" InitialMapCommand WarpToWindow 50 50
Style "*Apache NetBeans*" Lenience
Style yad StaysOnTop, Sticky, PositionPlacement center
Style FvwmBanner !Title !Borders
Style Alacritty !Title !Borders
TitleStyle Centered Height 10 -- Flat
DestroyModuleConfig FvwmPager:*
DestroyModuleConfig RightPanel:*

#Use colorset 15 for the StatusPanel
Colorset 15 Transparent,RootTransparent

DestroyFunc StartFunction
AddToFunc   StartFunction
+ I Test (Init, f $[FVWM_USERDIR]/.BGdefault) \
    Exec exec fvwm-root $[FVWM_USERDIR]/.BGdefault
+ I TestRc (NoMatch) Exec exec $[HOME]/.fehbg
+ I Test (Init) Module FvwmBanner
+ I Module FvwmButtons StatusPanel
+ I Module FvwmEvent EventNewDesk
+ I Test (F /usr/bin/raspi-config) Module FvwmButtons MainMenuButton

EwmhBaseStruts 0 0 0 0
DesktopSize 1x1

DestroyMenu QuickMenu
AddToMenu   QuickMenu "Menu" Title
Test (x brave-browser) + "&Brave" Exec exec brave-browser
Test (x chromium) + "&Chromium" Exec exec chromium
Test (x chromium-browser) + "&Chromium" Exec exec /bin/bash -c 'if [ -d ~/.config/chromium_ln ]; then cp -a ~/.config/chromium_ln /tmp; fi; chromium-browser'
Test (x firefox) + "&Firefox%icons/menu/firefox.png%" Exec exec firefox
Test (x google-chrome) + "Google-&Chrome" Exec exec google-chrome
Test (x luakit) + "&Luakit" Exec exec luakit
+ "" Nop
+ "&Office%icons/apps.png%" Popup OfficeMenu
+ "Sound/&Video%mini.sound.xpm%" Popup SoundMenu
+ "S&ystem%icons/programs.png%" Popup SystemMenu
PipeRead 'if [ -e $fvwm_home/funstuffPiMenu.fvwm ]; then echo + \"&Funstuff%mini.xsnow.xpm%\" Popup FunstuffPiMenu; fi'
PipeRead 'if [ -e $fvwm_home/gameMenu.fvwm ]; then echo + \"&Game%mini.xsnow.xpm%\" Popup GameMenu; fi'
+ "M&anual Pages%icons/help.png%" Popup MenuManPages
PipeRead 'if [ -e $fvwm_home/progMenu.fvwm ]; then echo + \"Prog&Menu\" Popup ProgMenu; fi'
Test (F progMenu.fvwm) + "Prog&Menu" Menu ProgMenu
+ "" Nop

+ "&Status Panel" FnStatusPanel
+ "&Pager" FuncPager
+ "&Icons" WindowList Root c c CurrentAtEnd, CurrentDesk, OnlyIcons, NoDeskSort, SelectOnRelease, OnlyNormal
+ "&Window Ops" Menu FvwmWindowOpsMenu
+ "Refes&h%icons/refresh.png%" Refresh
+ "&Restart FVWM%menu/restart.png%"  Restart
+ "Quit FVWM%menu/quit.png%"  FvwmQuit
+ "Poweroff%icons/quit.png%" Exec exec sudo poweroff
+ "" Nop
+ "" Nop

DestroyMenu MenuManPages
AddToMenu   MenuManPages "Manual Pages" Title
+ "Linux for Dummies" Exec exec mupdf $[LIBRARY_HOME]/book/pdf/Linux\ Dummies\ 9th.pdf
+ "Linux Fundamentals" Exec exec mupdf $[LIBRARY_HOME]/book/pdf/linuxfun.pdf
+ "Manual"              ViewManPage man
+ "apropos"             ViewManPage apropos
+ "fvwm"                ViewManPage fvwm

DestroyMenu OfficeMenu
AddToMenu   OfficeMenu  "Office Menu" Title
#Thunar is the preferred choice for fm because it is small and supports mtp for mobile devices.
Test (x thunar) + "File Manager (Thunar)" Exec exec thunar
Test (x nautilus) + "File Manager (Nautilus)" Exec exec nautilus
Test (x gentoo) + "File Manager (Gentoo)" Exec exec gentoo
Test (x pcmanfm) + "File Manager (Pacmanfm)" Exec exec pcmanfm
Test (x spacefm) + "File Manager (SpaceFm)" exec spacefm
Test (x calibre) + "Calibre-ebook" Exec exec calibre
Test (x fbreader) + "&FbReader epub" Exec exec fbreader
Test (x mcomix) + "&Comix" Exec exec mcomix
Test (x mupdf) + "&Pdf (mupdf)" Exec exec mupdf
Test (x libreoffice) + "Office Suite" Exec exec libreoffice
+ "G&numeric Spreadsheet" Exec exec gnumeric
+ "&Abiword Document" Exec exec abiword
+ "GVim%menu/vim.png%" Exec exec gvim
Test (x gimp) + "&Gimp%menu/gimp.png%" Exec exec gimp
Test (x inkscape) + "&Inkscape" Exec exec inkscape
Test (x dia) + "&Dia Diagram Editor" Exec exec dia
Test (x scribus) + "&Scribus" Exec exec scribus
Test (x display) + "ImageMagick" Exec exec display
Test (x feh) + "Simple Image Viewer" Exec exec feh
Test (x artha) + "&Thesaurus" FuncArtha
Test (x denemo) + "Denemo Music Notation Editor" Exec exec denemo

DestroyMenu SoundMenu
AddToMenu   SoundMenu  "Sound/Video" Title
Test (x arandr) + "&Screen Layout" Exec exec arandr
+ "&Brightness/Volume Control" Module FvwmButtons Brightness/Volume
Test (x pavucontrol) + "&PulseAudio" Exec exec pavucontrol
+ "&SmTube (youtube)" Exec exec smtube
Test (x guvcview) + "Guvcview" Exec exec guvcview
Test (x discord) + "&Discord" Exec exec discord
Test (x lingot) + "Lingot tuner" Exec exit lingot
+ "&Media Player" Exec exec mpv --player-operation-mode=pseudo-gui
+ "T&otem"  FvwmTotem
Test (x openshot) + "Openshot (video editing)" Exec exec openshot
Test (x istanbul) + "Istanbul (screen capture)" Exec exec istanbul
Test (x simpelscreenrecorder) + "SimpleScreenRecorder(screen capture)" Exec exec simplescreenrecorder

DestroyMenu SystemMenu
AddToMenu   SystemMenu  "System Menu" Title
Test (x /usr/sbin/wpa_gui) + "Wireless Lan" FnFvwmWpaGui
+ "System Load" Exec exec xload
Test (F $[fvwm_home]/layout.fvwm) + "&Layouts" Popup LayoutMenu
+ "&Xterm" Exec exec xterm
Test (x alacritty) + "&Alacritty" FnAlacritty
Test (x picom) + "Picom" FnPicom
+ "x&clipboard" Exec exec xclipboard
Test (x xvkbd) + "Virutal Keyboard" Exec exec xvkbd -minimizable -compact -geometry 485x150+0-0
+ "&Wallpapers%icons/wallpaper.png%" Popup BGMenu
+ "&MouseConfig" Exec . ~/bin/shellscripts/config/mouse.env
Test (x upower) + "&Battery Warning" Exec exec  ~/bin/shellscripts/config/funcPower.sh
Test (x cbatticon) + "Battery Status" FnFvwmCbatticon
Test (x xscreensaver-command) + "Screen &Lock" Exec exec xscreensaver-command -lock
Test (x /usr/bin/raspi-config) + "ReadOnly Filesystem" Exec exec sudo mount -o remount,ro /
Test (x /usr/bin/raspi-config) + "ReadWrite Filesystem" Exec exec sudo mount -o remount,rw /
Test (x /etc/systemd/system/read-only-config.sh) + "Clock Write" Exec exec touch /var/tmp/WRITE_CLK
Test (x synclient) + "&Touchpad Toggle" Exec exec $[HOME]/bin/shellscripts/synclient.sh
Test (x alacritty) + "T&int Alacritty" FnAlacrittyTint

# Background Menu
#
# Backgrounds are located in ~/.fvwm/images/background/
# Menu icons are located in ~/.fvwm/images/bgicons/
# Create the icon eg:  convert -geometry 32x32 background/bg7.png bgicons/bg7.png
DestroyMenu BGMenu
AddToMenu   BGMenu "Wallpapers" Title
#+ "Click a tile. (m)enu on opened image ->File->Background" Exec exec feh -t /usr/share/fvwm3/default-config/images/background/* ~/.fvwm/images/background/
+ "Select Wallpaper" Wallpaper
#+ "Floral%bgicons/bg1.png%" SetBG bg1.png
#+ "Circles%bgicons/bg2.png%" SetBG bg2.png
#+ "Space%bgicons/bg3.png%" SetBG bg3.png
#+ "Tritile%bgicons/bg4.png%" SetBG bg4.png
#+ "Cat%bgicons/bg5.png%" SetBG bg5.png
#+ "Scenic Mountains%bgicons/bg6.png%" SetBG bg6.png
#+ "WiseMan%bgicons/bg7.png%" SetBG bg7.png
#+ "Tf2%bgicons/bg8.png%" SetBG bg8.png
#+ "Stream%bgicons/bg9.png%" SetBG bg9.png
#+ "OceanLandscape%bgicons/bg10.png%" SetBG bg10.png

######
# Wallpaper function
###########
DestroyFunc Wallpaper
AddToFunc   Wallpaper
+ I Exec  exec feh -t /usr/share/fvwm3/default-config/images/background/* ~/.fvwm/images/background/
+ I Exec  exec yad --title="Select Wallpaper" --text "» Click a wallpaper tile.\n» Press (m)enu on the wallpaper image when it opens.\n» File\n» Background\n» Set Filled\n\n» Note: the image may open under this message window." --escape-ok --sticky --center --on-top --borders=20

DestroyFunc FnAlacrittyPID
AddToFunc  FnAlacrittyPID
+ I PipeRead " \
if [ -n \"`which alacritty`\" ]; then \
  COUNT=$(pgrep alacritty |wc -w); \
  if [ $COUNT -eq 1 ]; then \
    AlacrittyPID=$(pgrep alacritty); \
    echo InfoStoreAdd AlacrittyPID $AlacrittyPID; \
  elif [ $COUNT -eq 0 ]; then \
    echo InfoStoreAdd AlacrittyPID 0; \
  else \
   MSG=\"Error! Alacritty process count: $COUNT\"; \
   echo $MSG >> $[infostore.log]; \
   . runcommand.env; \
   runcommand \"yad --title=FVWMError --text check_fvwm_log --escape-ok \
    --sticky --center --on-top --borders=15\" $LOG; \
    echo Break; \
  fi; \
else \
    echo alacritty not installed >> $[infostore.log]; \
    echo Break; \
fi; \
"

#Spawn alacritty deamon and wait for startup completion.
DestroyFunc FnAlacrittyDaemon
AddToFunc  FnAlacrittyDaemon
+ I FnAlacrittyPID
+ I PipeRead " \
PID=$[infostore.AlacrittyPID]; \
if [ ${PID:=0} -eq 0 ]; then \
  . runcommand.env; \
  runcommand \"alacritty --daemon\" $[infostore.log]; \
  if [ $(PID:=0) -eq 0 ]; then \
    echo Error! Could not start alacritty daemon. No PID? >> $[infostore.log]; \
    echo Break; \
  else \
    COUNT=0; \
    FOUND=0; \
    while [ $FOUND -eq 0 -a $COUNT -lt 3 ]; do \
      xdotool sleep 0.2; \
      FOUND=$(file  $(ls $XDG_RUNTIME_DIR/Alacritty*${PID}.sock) | grep -c socket\$) 2>/dev/null; \
      COUNT=$((COUNT+1)); \
    done; \
    echo InfoStoreAdd AlacrittyPID ${PID}; \
  fi; \
fi; \
"
+ I FnPicom

######
# Alacritty function
###########
#
DestroyFunc FnAlacritty
AddToFunc  FnAlacritty
+ I FnAlacrittyDaemon
+ I PipeRead " \
LIST=$(xdotool search -any --pid $[infostore.AlacrittyPID]); \
LIST=$(echo ${LIST:--}| sed -e 's/ /-/g' ); \
echo InfoStoreAdd AlacrittyList ${LIST}; \
"
+ I Exec exec alacritty msg create-window $*
#+ I Wait Alacritty #does not seem to work here?
# Because alacritty pops an initial window to calculate font sizes?
+ I PipeRead " \
ILIST=$(echo $[infostore.AlacrittyList]|sed -e 's/-/ /g' |xargs); \
TRIES=0; \
LIST=$(xdotool search -any --pid $[infostore.AlacrittyPID]); \
while [ $LIST = $ILIST -a $TRIES -lt 6 ]; do \
  xdotool sleep .1; \
  TRIES=$(TRIES+1); \
  LIST=$(xdotool search -any --pid $[infostore.AlacrittyPID]); \
done; \
for item in $ILIST; do \
  LIST=$(echo $LIST | sed -e 's/'$item'//g'); \
done; \
echo InfoStoreAdd AlacrittyWID $LIST; \
"
+ I Echo AlacrittyWID: $[infostore.AlacrittyWID]

DestroyFunc FnPicom
AddToFunc  FnPicom
+ I PipeRead ' \
if [ `pgrep -c picom` -eq 0 ]; then \
  if [ -n "`which picom`" ]; then \
    echo Exec exec picom; \
  else \
    echo Nop; \
  fi; \
fi'

DestroyMenu FvwmWindowOpsMenu
AddToMenu   FvwmWindowOpsMenu "Window Operations" Title
+ "M&ove%menu/window-move.xpm%"  Move
+ "&Resize%menu/window-resize.xpm%"  Resize
+ "(De)&Iconify%menu/window-iconify.xpm%"  Iconify
+ "(Un)&Maximize%menu/window-maximize.xpm%"  Maximize
+ "(Un)&Shade%menu/window-shade.xpm%"  WindowShade
+ "(Un)Stick%menu/window-stick.xpm%"  Stick
+ "Restac&k" FvwmWindowRestack
+ "" Nop
+ "MoveToDesk&0" MoveToDesk 0 0
+ "MoveToDesk&1" MoveToDesk 0 1
+ "MoveToDesk&2" MoveToDesk 0 2
+ "" Nop
+ "&Close%menu/window-close.xpm%"  Close
+ "D&elete%menu/window-delete.xpm%"  Delete
+ "&Destroy%menu/window-destroy.xpm%"  Destroy
+ "" Nop
+ "StaysOnTop%menu/window-raise.xpm%"  Pick (CirculateHit) Layer 0 6
+ "Layer +1%menu/window-raise.xpm%"  Pick (CirculateHit) Layer +1
+ "StaysPut%menu/window.xpm%"  Pick (CirculateHit) Layer 0 4
+ "Layer -1%menu/window-lower.xpm%"  Pick (CirculateHit) Layer -1
+ "StaysOnBottom%menu/window-lower.xpm%"  Pick (CirculateHit) Layer 0 2
+ "" Nop
+ "%menu/window.xpm%&Window Screenshot"  Pick (CirculateHit) FvwmWindowScreenshot
+ "%menu/display.xpm%Screensho&t" FvwmDesktopScreenshot 5
+ "" Nop
+ "x&3" MoveToDesk 0 -1
+ "xg" GoToDesk 0 -1
+ "&Transparency Exec exec FvwmAlacrittyTransparency
+ "Identif&y%menu/window-identify.xpm%"  Module FvwmIdent

Silent Key Super_L A A Menu QuickMenu
Silent Key Super_R A A Menu QuickMenu
#Key Menu A A Exec exec /home/daren/.fvwm/touchpadOn.sh

##use xev for key names or key mappings
#Key XF86AudioRaiseVolume A A Exec exec /usr/bin/amixer sset Master,0 10%+,10%+
#Key XF86AudioLowerVolume A A Exec exec /usr/bin/amixer sset Master,0 10%-,10%-
#Key XF86AudioMute A A Exec exec /usr/bin/amixer sset Master,0 toggle
Key XF86AudioMute A A        Exec exec $[fvwm_home]/mixer mute
Key KEY_MUTE A A        Exec exec $[fvwm_home]/mixer mute
Key XF86AudioLowerVolume A A Exec exec $[fvwm_home]/mixer minus
Key KEY_VOLUMEDOWN A A Exec exec $[fvwm_home]/mixer minus
Key XF86AudioRaiseVolume A A Exec exec $[fvwm_home]/mixer plus
Key KEY_VOLUMEUP A A Exec exec $[fvwm_home]/mixer plus
Key XF86MonBrightnessUp A A Exec exec ${HOME}/bin/shellscripts/xbacklight.sh plus
Key XF86MonBrightnessDown A A Exec exec ${HOME}/bin/shellscripts/xbacklight.sh minus
Key XF86TouchpadToggle A A Exec exec ${HOME}/bin/shellscripts/synclient.sh
Key F8 A SC Exec exec ${HOME}/bin/shellscripts/xbacklight.sh minus
Key F9 A SC Exec exec ${HOME}/bin/shellscripts/xbacklight.sh plus
Key F10 A SC Exec exec $[fvwm_home]/mixer mute
Key F11 A SC Exec exec $[fvwm_home]/mixer minus
Key F12 A SC Exec exec $[fvwm_home]/mixer plus

Key XF86Messenger A A FvwmSkype
Key XF86HomePage A A FvwmFireFox
Key XF86Mail A A FvwmEvolution
Key XF86Documents A A FvwmNautilus
Key XF86Explorer A A FvwmNautilus
Key XF86MyComputer A A FvwmNautilus
Key XF86Calculator A A FvwmCalculator
Key XF86Sleep A A Exec exec sudo pm-suspend
Key Delete A S Exec exec sudo pm-suspend
Key Print A A FvwmDesktopScreenshot

#Flip pages
Key h A CM CursorMove -5 +0
Key l A CM CursorMove +5 +0
Key k A CM CursorMove +0 -5
Key j A CM CursorMove +0 +5
Key h A SCM CursorMove -50 +0
Key l A SCM CursorMove +50 +0
Key k A SCM CursorMove +0 -50
Key j A SCM CursorMove +0 +50

#Flip desktop
Key Left A CM GotoDesk -1 0 0 2
Key Right A CM GotoDesk +1 0 0 2

#Activate Menus
Key F1 A M Menu MenuFvwmRoot
Key F2 A M Menu FvwmRootMenu
Key F3 A M Menu QuickMenu
#Select window
#Key Tab A M WindowList Root c c  CurrentDesk, NoSticky, NoIcons, SelectOnRelease Meta_L
Key Tab A M WindowList Root c c CurrentDesk, NoIcons

#Mouse control
Mouse 1 R A Nop
Mouse 3 R A Menu QuickMenu
Mouse 2 R A Menu FvwmWindowOpsMenu
Mouse 1 T S WindowShade

##############################
# Default Functions Overridden
##############################
AddToFunc WindowListFunc
+ I WarpToWindow 50 50
+ I Focus

##################
# New Window Event
##################
#No need to use event to warp. Instead use  Style "*" InitialMapCommand WarpToWindow 50 50
#DestroyModuleConfig FvwmEvent-NewWindow: *
#*FvwmEvent-NewWindow: Cmd
##*FvwmEvent-NewWindow: add_window "WarpToWindow"
#*FvwmEvent-NewWindow: add_window "FuncFocusWindow"

#DestroyFunc FuncFocusWindow
#AddToFunc FuncFocusWindow
#+ I PipeRead "~/.fvwm/focusWindow.sh '$[w.resource]' '$[w.name]' '$[w.id]'"

##############
# Pager Config
##############

DestroyFunc FuncPager
AddToFunc FuncPager
+ I PipeRead ' \
if [ `pgrep -c FvwmPager` -ne 0 ]; then  \
  echo "FuncHidePager"; \
 else \
  echo  "FuncEnablePager"; \
fi'

# Create the pager
DestroyFunc FuncEnablePager
AddToFunc FuncEnablePager
+ I Module FvwmPager FvwmPager 0 2

# Hide the pager with Iconify 'NoIcon'
DestroyFunc FuncHidePager
addToFunc FuncHidePager
+ I All ("FvwmPager") Iconify

Style "FvwmPager" Title, !Handles, !Borders, Sticky, WindowListSkip, \
  CirculateSkip, StaysOnTop, FixedPosition, FixedSize, NoIcon

DestroyModuleConfig FvwmPager: *
*FvwmPager: Geometry 150x480-0+20
*FvwmPager: Colorset * 9
*FvwmPager: HilightColorset * 10
*FvwmPager: BalloonColorset * 9
*FvwmPager: WindowColorsets 9 10
*FvwmPager: Font "xft:Sans:Bold:pixelsize=12:minspace=True:antialias=True"
*FvwmPager: Balloons All
*FvwmPager: BalloonFont "xft:Sans:Bold:pixelsize=12:minspace=True:antialias=True"
*FvwmPager: BallonYOffset +2
*FvwmPager: Window3dBorders
*FvwmPager: MiniIcons
*FvwmPager: UseSkipList
*FvwmPager: Rows 3

#####################
# Brightness/Volume Config
#####################

DestroyModuleConfig Brightness/Volume:*
*Brightness/Volume: Geometry -0+20
*Brightness/Volume: Rows 3
*Brightness/Volume: Columns 2
*Brightness/Volume: Back black
*Brightness/Volume:  (Id volUp,         Icon 64/up.png, \
  ActionOnPress, Action (Mouse1) `Exec $[fvwm_home]/mixer plus`)
*Brightness/Volume:  (Id backlightUp,   Icon 64/up.png, \
  ActionOnPress, Action (Mouse1) `Exec ~/bin/shellscripts/xbacklight.sh plus`)
*Brightness/Volume:  (Id volSym,        Icon 64/volume.png     Frame 0)
*Brightness/Volume:  (Id backlightSym,  Icon 64/lightbulb.png  Frame 0)
*Brightness/Volume:  (Id volDown,       Icon 64/down.png, \
  ActionOnPress, Action (Mouse1) `Exec $[fvwm_home]/mixer minus`)
*Brightness/Volume:  (Id backlightDown, Icon 64/down.png, \
  ActionOnPress, Action (Mouse1) `Exec ~/bin/shellscripts/xbacklight.sh minus`)

Style "Brightness/Volume" Title, Handles, Borders, Sticky, \
  StaysOnTop, !Iconifiable

DestroyModuleConfig MainMenuButton:*
*MainMenuButton: Geometry -305+0
*MainMenuButton: Back black
*MainMenuButton: Frame 0
*MainMenuButton: Padding 0 0
*MainMenuButton: (Id mainMenu, Icon 12/next.png, ActionOnPress, \
    Action Menu QuickMenu)

Style "MainMenuButton" !Title, !Handles, !Borders, Sticky, WindowListSkip, \
  CirculateSkip, StaysOnTop, FixedPosition, FixedSize, !Iconifiable

#This button allows thesaurus lookup on the rpi of a highlighted word.
#TODO allow dynamic positioning.
DestroyModuleConfig ArthaButton:*
*ArthaButton: Geometry -355+0
*ArthaButton: Back white
*ArthaButton: Frame 0
*ArthaButton: Padding 0 0
*ArthaButton: (Id arthaButton, Icon 12/artha.png, ActionOnPress, \
    Action Exec ~/bin/shellscripts/artha.sh)

Style "ArthaButton" !Title, !Handles, !Borders, Sticky, WindowListSkip, \
  CirculateSkip, StaysOnTop, FixedPosition, FixedSize, !Iconifiable

DestroyFunc FuncArtha
AddToFunc FuncArth
+ I KillModule ArthaButton
Test (x raspi-config) + I Module FvwmButtons ArthaButton
+ I Exec artha

#####
# Basic Functions
###########
DestroyFunc FvwmQuit
AddToFunc   FvwmQuit
+ I Exec exec ${HOME}/.fvwm/fvwmQuit.sh

DestroyFunc FvwmDeleteOrDestroy
AddToFunc   FvwmDeleteOrDestroy
+ H Nop
+ M Nop
+ C Delete
+ D Destroy

DestroyFunc FvwmIconifyOrShade
AddToFunc   FvwmIconifyOrShade
+ C Iconify
+ D WindowShade

DestroyFunc FvwmMaximize
AddToFunc   FvwmMaximize
+ H Nop
+ M Nop
+ C Maximize $0 $1

DestroyFunc FvwmMoveOrIconify
AddToFunc   FvwmMoveOrIconify
+ M Move
+ D Iconify

DestroyFunc FvwmWindowShade
AddToFunc   FvwmWindowShade
+ D WindowShade $0

DestroyFunc FvwmWindowRestack
AddToFunc   FvwmWindowRestack
#+ I RestackTransients
+ I Iconify
+ I Iconify

#####
# Screenshot Functions (uses ImageMagick)
###########
DestroyFunc FvwmWindowScreenshot
AddToFunc   FvwmWindowScreenshot
+ I ThisWindow (!Shaded !Iconic Iconifiable) \
  Exec import -window $[w.id] -quality 100 -silent \
  "$[fvwm_home]/screenshot/screenshot-`date +%F[%R]`.$[w.id].jpg"

DestroyFunc FvwmDesktopScreenshot
AddToFunc   FvwmDesktopScreenshot
+ I Exec sleep $0; import -window root -quality 100 -silent \
  "$[fvwm_home]/screenshot/screenshot-`date +%F[%R]`.jpg"

DestroyFunc FnStatusPanel
AddToFunc FnStatusPanel
+ I PipeRead ' \
if [ `pgrep -a FvwmButtons| grep -c StatusPanel` -ne 0 ]; then  \
  echo "FnHideStatusPanel"; \
else  \
  echo "FnEnableStatusPanel";  \
fi'

#An fvwm Restart can leave StatusPanel in a random state. Sometimes swallowed items
#are cleaned up, sometimes they are not. So start the enable of a panel with destroy.
DestroyFunc FnEnableStatusPanel
AddToFunc   FnEnableStatusPanel
+ I Module FvwmButtons StatusPanel

# Hide the panel with Iconify 'NoIcon'
DestroyFunc FnHideStatusPanel
AddToFunc FnHideStatusPanel
+ I All ("StatusPanel") Iconify

DestroyFunc FnFvwmCbatticon
AddToFunc FnFvwmCbatticon
+ I PipeRead 'killall -9 cbatticon; echo Nop'
+ I Exec exec cbatticon

DestroyFunc FnFvwmWpaGui
AddToFunc FnFvwmWpaGui
+ I PipeRead 'sudo killall -9 wpa_gui; echo Nop'
+ I Exec exec sudo wpa_gui -t

#Note: use stalonetray over trayer because tray had issues being swallowed by FVWMButtons.
DestroyModuleConfig StatusPanel:*
*StatusPanel:  Geometry 370x25-0+0
*StatusPanel:  Columns 370
*StatusPanel:  Rows 25
*StatusPanel:  Colorset 15
*StatusPanel:  (50x5, Frame0)
*StatusPanel:  (25x25, Frame0, Swallow FvwmXmem \
  "Exec xmem -name FvwmXmem -nolabel -fg white -codecolor red -cachedcolor orange \
  -buffercolor yellow -freecolor green -swapcolor blue -update 5")
*StatusPanel:  (100x25, Frame0, Swallow FvwmXload \
  "Exec xload -name FvwmXload -nolabel -fg white -bg black -update 5" )
*StatusPanel:  (25x5, Frame0)
*StatusPanel:  (170x5, Frame0)
*StatusPanel:  (50x20, Frame0, Swallow stalonetray \
  "Exec stalonetray -t -i 18 --dockapp-mode simple --max-geometry 50x20 --no-shrink true --kludges force_icons_size" )
*StatusPanel:  (25x20, Frame0, Swallow FvwmXeyes "Exec xeyes -name FvwmXeyes -fg black " )
*StatusPanel: (170x20, Frame0, Swallow "FvwmXclock" \
  `Exec xclock -name FvwmXclock -digital -strftime "%H:%M:%S %a %d %b %Y" -padding 0 \
   -fg white -update 1 -face -misc-fixed-medium-r-normal--10-70-100-100-c-60-iso8859-1`)

DestroyFunc FnAlacrittyTint
AddToFunc FnAlacrittyTint
+ I PipeRead ' \
  WID=`echo '$[w.id]' |tr "[a-f]" "[A-F]"| cut -d x -f 2`; \
  WID=`echo "ibase=16; $WID"| bc`; echo "InfoStoreAdd WID $WID"; \
'
+ I PipeRead ' \
TINT_VAL='$[infostore.atty$[infostore.WID]]'; \
if [ $TINT_VAL = \$[infostore.atty\$[infostore.WID]] ]; then \
  TINT_VAL=0; \
fi; \
ALACRITTY_WINDOW_ID='$[infostore.WID]'; \
export ALACRITTY_WINDOW_ID; \
if [ $TINT_VAL -eq 0 ]; then \
   alacritty msg config window.opacity=1; \
   echo "InfoStoreAdd atty'$[infostore.WID]' 1"; \
else \
   alacritty msg config  window.opacity=0.6; \
   echo "InfoStoreAdd atty'$[infostore.WID]' 0"; \
fi; \
'
+ I PrintInfo infostore

#Example PipeRead scripting with read friendly layout and variable manipulation.
#Need to remember the script is written as a single line command
#so addition of ';' is necessary where EOL normally does the job.
#Also no space after line continuation char '\' silently fails the script.
#Note: If an infostore key does not exist it defaults to its literal string value.
#Note: Use runcommand (runcommand.env) to start a bg process ie can not embed '&'.
#Note: PipeRead blocks unlike Exec.
DestroyFunc FnPipeReadExample
AddToFunc FnPipeReadExample
+ I Echo $[infostore.SOMEVAR]
+ I SetEnv SOMEVAR $[infostore.SOMEVAR]
+ I PipeRead ' \
if [ ${SOMEVAR:-\$[infostore.SOMEVAR]} = "\$[infostore.SOMEVAR]" ]; then \
  SOMEVAR="default"; \
fi; \
echo "InfoStoreAdd SOMEVAR $SOMEVAR"; \
'
+ I Echo $[infostore.SOMEVAR]
+ I UnsetEnv SOMEVAR
+ I PrintInfo infostore

# vim:syntax=fvwm
