source $VIMRUNTIME/defaults.vim
set modeline

set belloff=all
set directory=~/.cache
set backupdir=~/.cache
set tabstop=2
set shiftwidth=2
set expandtab
set noic
set fdm=marker
"set mouse mode for xterm use
"use "*p to paste clipboard
behave xterm
set mouse=a

set bs=indent,eol,start	" allow backspacing over everything in insert mode
set viminfo='20,<50,s10,h,n~/.cache/viminfo
set history=20
set hlsearch

"vim network read/write bookmark/history disable.
:let g:netrw_dirhistmax=0

nnoremap \ ,
let mapleader=','
"execute commands from the "clipboard
nnoremap <leader>2 :@"<CR>
"switch between the last 2 buffers
nnoremap <leader>3 :e#<CR>

"spelling {{{
"jump to spelling errors: [s ]s
map <leader>spel :setlocal spell spelllang=en_au<RETURN>
map <leader>nspel :setlocal nospell<RETURN>
"enable spelling for the git commit message.
autocmd! BufWinEnter *COMMIT_EDITMSG :setlocal spell spelllang=en_au
"}}}
"alacritty {{{
if $TERM =='alacritty'
  colo asu1dark
  hi Normal guibg=NONE ctermbg=NONE
  hi EndOfBuffer guibg=NONE ctermbg=NONE
  hi Folded guibg=NONE ctermbg=NONE
else
  "colo koehler
  "colo blackbeauty
  colo asu1dark
endif
"{{{ ToggleTransparency()
function ToggleTransparency()
  let l:color = execute('hi Normal')
  if l:color =~ 'ctermbg=0'
    "set to transparent
    hi Normal ctermbg=None
  else
    "set to black
    hi Normal ctermbg=0
  endif
endfunction
nnoremap <leader>tt :call ToggleTransparency()<CR>
"}}}
"}}}
"{{{ diff settings DoDiff()
function DoDiff()
  "Note: on exit of diff split, enable syntax again if required ie :syntax on
  syntax off
  "colorscheme github
  "color slate
  "color evening
  "colorscheme molokai
  colo koehler
endfunction

if &diff
  call DoDiff()
endif

:command Gdiff {
  Gvdiffsplit
  call DoDiff()
}
"}}}
"{{{ buffers
"select from hidden buffer
nnoremap <leader>bh :ls!<CR>:b<Space>
"wipeout buffer
nnoremap <leader>bw :ls!<CR>:bw<Space>
"toggle with last buffer
nnoremap <leader>3 :e#<CR>
nmap <C-n> :bn<cr>
nmap <C-p> :bp<cr>
"}}}
"{{{ window nav
nnoremap <leader>w <C-w>
nnoremap <M-h> <C-w>h
nnoremap <M-j> <C-w>j
nnoremap <M-k> <C-w>k
nnoremap <M-l> <C-w>l
"}}}
"{{{ resize window :help key-notation
nnoremap <M-Left> <C-w><
nnoremap <M-Down> <C-w>+
nnoremap <M-Up> <C-w>-
nnoremap <M-Right> <C-w>>
"}}}
"{{{ tabs
nnoremap <leader>t :tab
"new
nnoremap <M-n> :tabn<cr>
"previous
nnoremap <M-p> :tabp<cr>
"next
nnoremap <C-Tab> :tabn<cr>
"previous
nnoremap <C-S-Tab> :tabp<cr>
"new
nnoremap tn :tabe<CR>
"new
nnoremap te :tabe<Space><C-z><S-Tab>
"new tab with filename
nnoremap tf :tabf<Space>
"close
nnoremap tc :tabc<CR>
"close other
nnoremap to :tabo<CR>
"tab move
nnoremap tm :tabm<CR>
"list of tabs
nnoremap ts :tabs<CR>

nnoremap th :tabr<CR>
nnoremap tj :tabn<CR>
nnoremap tk :tabp<CR>
nnoremap tl :tabl<CR>
"}}}
"{{{crude debug function.
function Ikky(buf)
	"eg call Ikky(['blah'])
	call writefile(a:buf,glob('/opt/volatile/tmp/vibuf.out', 'ba'))
endfunction
"}}}

